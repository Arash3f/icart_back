"""empty message

Revision ID: 1a7f9c2bde97
Revises: bd2eb8cee337
Create Date: 2023-11-10 04:50:45.581264

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from src.fee.models import FeeUserType

# revision identifiers, used by Alembic.
revision: str = "1a7f9c2bde97"
down_revision: Union[str, None] = "bd2eb8cee337"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    fee_user_type = postgresql.ENUM(
        FeeUserType,
        name="feeusertype",
    )
    fee_user_type.create(op.get_bind(), checkfirst=True)
    op.add_column(
        "fee",
        sa.Column("user_type", fee_user_type, nullable=True),
    )
    # op.alter_column('transaction', 'status',
    #            existing_type=postgresql.ENUM('IN_PROGRESS', 'FAILED', 'ACCEPTED', name='transactionstatusenum'),
    #            nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "transaction",
        "status",
        existing_type=postgresql.ENUM(
            "IN_PROGRESS",
            "FAILED",
            "ACCEPTED",
            name="transactionstatusenum",
        ),
        nullable=True,
    )
    op.add_column(
        "fee",
        sa.Column("value_limit", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_column("fee", "user_type")
    # ### end Alembic commands ###
