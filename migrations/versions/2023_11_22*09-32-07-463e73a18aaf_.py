"""empty message

Revision ID: 463e73a18aaf
Revises:
Create Date: 2023-11-22 09:32:07.956873

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "463e73a18aaf"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ability",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ability_id"), "ability", ["id"], unique=True)
    op.create_index(op.f("ix_ability_name"), "ability", ["name"], unique=True)
    op.create_table(
        "agent",
        sa.Column("is_main", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("profit_rate", sa.Float(), nullable=True),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], use_alter=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_agent_id"), "agent", ["id"], unique=True)
    op.create_table(
        "cash",
        sa.Column("balance", sa.BigInteger(), nullable=True),
        sa.Column("cash_back", sa.BigInteger(), nullable=True),
        sa.Column("received", sa.BigInteger(), nullable=True),
        sa.Column("consumed", sa.BigInteger(), nullable=True),
        sa.Column("transferred", sa.BigInteger(), nullable=True),
        sa.Column("debt", sa.BigInteger(), nullable=True),
        sa.Column("used", sa.BigInteger(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_cash_id"), "cash", ["id"], unique=True)
    op.create_table(
        "credit",
        sa.Column("balance", sa.BigInteger(), nullable=True),
        sa.Column("paid", sa.BigInteger(), nullable=True),
        sa.Column("considered", sa.BigInteger(), nullable=True),
        sa.Column("remaining", sa.BigInteger(), nullable=True),
        sa.Column("received", sa.BigInteger(), nullable=True),
        sa.Column("debt", sa.BigInteger(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("credit_back", sa.BigInteger(), nullable=True),
        sa.Column("used", sa.BigInteger(), nullable=True),
        sa.Column("consumed", sa.BigInteger(), nullable=True),
        sa.Column("transferred", sa.BigInteger(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_credit_id"), "credit", ["id"], unique=True)
    op.create_table(
        "crypto",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_crypto_id"), "crypto", ["id"], unique=True)
    op.create_index(op.f("ix_crypto_name"), "crypto", ["name"], unique=True)
    op.create_table(
        "fee",
        sa.Column("limit", sa.BigInteger(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("CASH", "CREDIT", name="feetypeenum"),
            nullable=False,
        ),
        sa.Column(
            "user_type",
            sa.Enum("USER", "MERCHANT", name="feeusertype"),
            nullable=False,
        ),
        sa.Column("percentage", sa.Float(), nullable=True),
        sa.Column("value", sa.Integer(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_fee_id"), "fee", ["id"], unique=True)
    op.create_table(
        "important_data",
        sa.Column("registration_fee", sa.Integer(), nullable=False),
        sa.Column("blue_card_cost", sa.Integer(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_important_data_id"), "important_data", ["id"], unique=True)
    op.create_table(
        "location",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["parent_id"], ["location.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_location_id"), "location", ["id"], unique=True)
    op.create_index(op.f("ix_location_name"), "location", ["name"], unique=True)
    op.create_table(
        "news",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_news_id"), "news", ["id"], unique=True)
    op.create_index(op.f("ix_news_title"), "news", ["title"], unique=False)
    op.create_table(
        "permission",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("code", sa.Integer(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(op.f("ix_permission_id"), "permission", ["id"], unique=True)
    op.create_index(op.f("ix_permission_name"), "permission", ["name"], unique=False)
    op.create_table(
        "role",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_role_id"), "role", ["id"], unique=True)
    op.create_index(op.f("ix_role_name"), "role", ["name"], unique=False)
    op.create_table(
        "verify_phone",
        sa.Column("phone_number", sa.String(), nullable=False),
        sa.Column("verify_code", sa.Integer(), nullable=False),
        sa.Column("expiration_code_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "type",
            sa.Enum("FORGET_PASSWORD", "REGISTER", name="verifyphonetype"),
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_verify_phone_id"), "verify_phone", ["id"], unique=True)
    op.create_index(
        op.f("ix_verify_phone_phone_number"),
        "verify_phone",
        ["phone_number"],
        unique=True,
    )
    op.create_index(
        op.f("ix_verify_phone_verify_code"),
        "verify_phone",
        ["verify_code"],
        unique=False,
    )
    op.create_table(
        "agent_ability",
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("ability_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["ability_id"], ["ability.id"]),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_agent_ability_id"), "agent_ability", ["id"], unique=True)
    op.create_table(
        "agent_location",
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_agent_location_id"), "agent_location", ["id"], unique=True)
    op.create_table(
        "cooperation_request",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("tel", sa.String(), nullable=False),
        sa.Column("requester_name", sa.String(), nullable=False),
        sa.Column(
            "type",
            sa.Enum(
                "AGENT",
                "ORGANIZATION",
                "MERCHANT",
                "SALES_AGENT",
                name="cooperationtype",
            ),
            nullable=True,
        ),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column(
            "field_of_work",
            sa.Enum(
                "HAIR_TRANSPLANT",
                "BEAUTY_CLINICS",
                "DENTAL_CLINICS",
                "FACIAL_GEL_BOTOX",
                "FURNITURE_STORES",
                "ELECTRICAL_APPLIANCES_STORE",
                "SLEEP_GOODS_STORES",
                "CARPET",
                "ELECTRICAL_APPLIANCES_REPAIRS",
                "LAPTOP",
                "MOBILE",
                "DIGITAL_ACCESSORIES",
                "TRAVEL_AGENCY",
                "RECREATIONAL_SPORTS_CENTERS",
                "LANGUAGE_TEACHING",
                "HAIRDRESSING_TRAINING",
                "STATIONERY",
                "WATCH_GALLERY",
                "GOLD_SALES",
                "JEWELRY_ACCESSORIES",
                "SUPER_MARKET",
                "FRUIT_SHOP",
                "DAIRY",
                "CAFE_RESTAURANT_FAST_FOOD",
                "CONFECTIONERY_DRIED_FRUIT",
                "ASIA_INSURANCE",
                "THIRD_PARTY_INSURANCE",
                "ADULT_CLOTHING",
                "CHILDREN_CLOTHING",
                "BAGS_AND_SHOES",
                "INTERIOR_DECORATION_DESIGNER",
                "BUILDING_EQUIPMENT",
                "MESON",
                "CAR_REPAIRS",
                "PHARMACY",
                "KITCHEN_ACCESSORIES_STORE",
                "EDUCATIONAL_SERVICES",
                "HOME_APPLIANCES",
                "AUDIO_AND_VIDEO_PRODUCT_STORE",
                "BAKERY",
                "GROCERY_STORES",
                "STATIONERY_STORES",
                "DTY_FRUITS_SHOP",
                "CLINICS",
                "CLOTHING_STORES",
                "HAIRDRESSERS",
                "LASER_CENTERS",
                "GOLD_AND_SILVER",
                "WATCH_SHOP",
                "PERFUME_AND_COLOGNE_STORE",
                "DECORATION",
                "COSMETIC",
                "PROTEIN_STORE",
                "CHANDELIERS_AND_ELECTRICAL_APPLIANCES",
                name="cooperationrequestfieldofworktype",
            ),
            nullable=True,
        ),
        sa.Column("employee_count", sa.Integer(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_cooperation_request_id"),
        "cooperation_request",
        ["id"],
        unique=True,
    )
    op.create_table(
        "organization",
        sa.Column("total_considered_credit", sa.BigInteger(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], use_alter=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_organization_id"), "organization", ["id"], unique=True)
    op.create_table(
        "role_permission",
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("permission_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["permission_id"], ["permission.id"]),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_role_permission_id"),
        "role_permission",
        ["id"],
        unique=True,
    )
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("national_code", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("subscribe_newsletter", sa.Boolean(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("is_valid", sa.Boolean(), nullable=True),
        sa.Column("one_time_password", sa.String(), nullable=True),
        sa.Column("expiration_password_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("phone_number", sa.String(), nullable=True),
        sa.Column("birth_place", sa.String(), nullable=True),
        sa.Column("postal_code", sa.String(), nullable=True),
        sa.Column("father_name", sa.String(), nullable=True),
        sa.Column("tel", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("personnel_number", sa.String(), nullable=True),
        sa.Column("organizational_section", sa.String(), nullable=True),
        sa.Column("job_class", sa.String(), nullable=True),
        sa.Column("national_card_front_version_id", sa.String(), nullable=True),
        sa.Column("national_card_front_name", sa.String(), nullable=True),
        sa.Column("national_card_back_version_id", sa.String(), nullable=True),
        sa.Column("national_card_back_name", sa.String(), nullable=True),
        sa.Column("birth_certificate_version_id", sa.String(), nullable=True),
        sa.Column("birth_certificate_name", sa.String(), nullable=True),
        sa.Column("video_version_id", sa.String(), nullable=True),
        sa.Column("video_name", sa.String(), nullable=True),
        sa.Column("image_version_id", sa.String(), nullable=True),
        sa.Column("image_name", sa.String(), nullable=True),
        sa.Column("image_background_version_id", sa.String(), nullable=True),
        sa.Column("image_background_name", sa.String(), nullable=True),
        sa.Column("role_id", sa.UUID(), nullable=True),
        sa.Column("credit_id", sa.UUID(), nullable=True),
        sa.Column("cash_id", sa.UUID(), nullable=True),
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("self_organization_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["cash_id"], ["cash.id"]),
        sa.ForeignKeyConstraint(["credit_id"], ["credit.id"]),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["organization_id"], ["organization.id"]),
        sa.ForeignKeyConstraint(["role_id"], ["role.id"], ondelete="RESTRICT"),
        sa.ForeignKeyConstraint(["self_organization_id"], ["organization.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_first_name"), "user", ["first_name"], unique=False)
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=True)
    op.create_index(op.f("ix_user_last_name"), "user", ["last_name"], unique=False)
    op.create_index(
        op.f("ix_user_national_code"),
        "user",
        ["national_code"],
        unique=True,
    )
    op.create_index(op.f("ix_user_username"), "user", ["username"], unique=True)
    op.create_table(
        "log",
        sa.Column("detail", sa.String(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "DELETE_ROLE",
                "ADD_ROLE",
                "UPDATE_ROLE",
                "UPDATE_AGENT",
                "DELETE_ABILITY",
                "ADD_ABILITY",
                "UPDATE_ABILITY",
                "ADD_LOCATION",
                "UPDATE_LOCATION",
                "ADD_CAPITAL_TRANSFER",
                "APPROVE_CAPITAL_TRANSFER",
                "ADD_FEE",
                "DELETE_FEE",
                "UPDATE_FEE",
                "ADD_USER_MESSAGE",
                "DELETE_USER_MESSAGE",
                "ADD_TICKET",
                "UPDATE_TICKET",
                "ADD_NEWS",
                "DELETE_NEWS",
                "UPDATE_NEWS",
                "ASSIGN_PERMISSION_TO_ROLE",
                "UPDATE_MERCHANT",
                "ADD_POS",
                "DELETE_POS",
                "UPDATE_POS",
                "UPDATE_USER",
                "UPDATE_USER_ACTIVITY",
                "GENERATE_ORGANIZATION_USER",
                "APPEND_ORGANIZATION_USER",
                "ACTIVE_ORGANIZATION_USER",
                "UPDATE_POSITION_REQUEST",
                "CREATE_POSITION_REQUEST",
                "APPROVE_POSITION_REQUEST",
                "BUY_CARD",
                "CHARGING_CARD",
                name="logtype",
            ),
            nullable=True,
        ),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_log_id"), "log", ["id"], unique=True)
    op.create_table(
        "merchant",
        sa.Column("number", sa.String(), nullable=False),
        sa.Column(
            "field_of_work",
            sa.Enum(
                "HAIR_TRANSPLANT",
                "BEAUTY_CLINICS",
                "DENTAL_CLINICS",
                "FACIAL_GEL_BOTOX",
                "FURNITURE_STORES",
                "ELECTRICAL_APPLIANCES_STORE",
                "SLEEP_GOODS_STORES",
                "CARPET",
                "ELECTRICAL_APPLIANCES_REPAIRS",
                "LAPTOP",
                "MOBILE",
                "DIGITAL_ACCESSORIES",
                "TRAVEL_AGENCY",
                "RECREATIONAL_SPORTS_CENTERS",
                "LANGUAGE_TEACHING",
                "HAIRDRESSING_TRAINING",
                "STATIONERY",
                "WATCH_GALLERY",
                "GOLD_SALES",
                "JEWELRY_ACCESSORIES",
                "SUPER_MARKET",
                "FRUIT_SHOP",
                "DAIRY",
                "CAFE_RESTAURANT_FAST_FOOD",
                "CONFECTIONERY_DRIED_FRUIT",
                "ASIA_INSURANCE",
                "THIRD_PARTY_INSURANCE",
                "ADULT_CLOTHING",
                "CHILDREN_CLOTHING",
                "BAGS_AND_SHOES",
                "INTERIOR_DECORATION_DESIGNER",
                "BUILDING_EQUIPMENT",
                "MESON",
                "CAR_REPAIRS",
                "PHARMACY",
                "KITCHEN_ACCESSORIES_STORE",
                "EDUCATIONAL_SERVICES",
                "HOME_APPLIANCES",
                "AUDIO_AND_VIDEO_PRODUCT_STORE",
                "BAKERY",
                "GROCERY_STORES",
                "STATIONERY_STORES",
                "DTY_FRUITS_SHOP",
                "CLINICS",
                "CLOTHING_STORES",
                "HAIRDRESSERS",
                "LASER_CENTERS",
                "GOLD_AND_SILVER",
                "WATCH_SHOP",
                "PERFUME_AND_COLOGNE_STORE",
                "DECORATION",
                "COSMETIC",
                "PROTEIN_STORE",
                "CHANDELIERS_AND_ELECTRICAL_APPLIANCES",
                name="fieldofworktype",
            ),
            nullable=True,
        ),
        sa.Column(
            "selling_type",
            sa.Enum(
                "CASH",
                "CREDIT",
                "INSTALLMENT",
                "CASH_INSTALLMENT",
                "CREDIT_INSTALLMENT",
                "CASH_CREDIT",
                "CASH_CREDIT_INSTALLMENT",
                name="sellingtype",
            ),
            nullable=True,
        ),
        sa.Column("geo", sa.String(), nullable=True),
        sa.Column("profit_rate", sa.Integer(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column("blue_profit", sa.Float(), nullable=True),
        sa.Column("silver_profit", sa.Float(), nullable=True),
        sa.Column("gold_profit", sa.Float(), nullable=True),
        sa.Column("corporate_profit", sa.Float(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_merchant_id"), "merchant", ["id"], unique=True)
    op.create_index(op.f("ix_merchant_number"), "merchant", ["number"], unique=True)
    op.create_table(
        "position_request",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column(
            "field_of_work",
            sa.Enum(
                "HAIR_TRANSPLANT",
                "BEAUTY_CLINICS",
                "DENTAL_CLINICS",
                "FACIAL_GEL_BOTOX",
                "FURNITURE_STORES",
                "ELECTRICAL_APPLIANCES_STORE",
                "SLEEP_GOODS_STORES",
                "CARPET",
                "ELECTRICAL_APPLIANCES_REPAIRS",
                "LAPTOP",
                "MOBILE",
                "DIGITAL_ACCESSORIES",
                "TRAVEL_AGENCY",
                "RECREATIONAL_SPORTS_CENTERS",
                "LANGUAGE_TEACHING",
                "HAIRDRESSING_TRAINING",
                "STATIONERY",
                "WATCH_GALLERY",
                "GOLD_SALES",
                "JEWELRY_ACCESSORIES",
                "SUPER_MARKET",
                "FRUIT_SHOP",
                "DAIRY",
                "CAFE_RESTAURANT_FAST_FOOD",
                "CONFECTIONERY_DRIED_FRUIT",
                "ASIA_INSURANCE",
                "THIRD_PARTY_INSURANCE",
                "ADULT_CLOTHING",
                "CHILDREN_CLOTHING",
                "BAGS_AND_SHOES",
                "INTERIOR_DECORATION_DESIGNER",
                "BUILDING_EQUIPMENT",
                "MESON",
                "CAR_REPAIRS",
                "PHARMACY",
                "KITCHEN_ACCESSORIES_STORE",
                "EDUCATIONAL_SERVICES",
                "HOME_APPLIANCES",
                "AUDIO_AND_VIDEO_PRODUCT_STORE",
                "BAKERY",
                "GROCERY_STORES",
                "STATIONERY_STORES",
                "DTY_FRUITS_SHOP",
                "CLINICS",
                "CLOTHING_STORES",
                "HAIRDRESSERS",
                "LASER_CENTERS",
                "GOLD_AND_SILVER",
                "WATCH_SHOP",
                "PERFUME_AND_COLOGNE_STORE",
                "DECORATION",
                "COSMETIC",
                "PROTEIN_STORE",
                "CHANDELIERS_AND_ELECTRICAL_APPLIANCES",
                name="fieldofworktype",
            ),
            nullable=True,
        ),
        sa.Column("postal_code", sa.String(), nullable=True),
        sa.Column("tel", sa.String(), nullable=True),
        sa.Column("address", sa.Text(), nullable=True),
        sa.Column("employee_count", sa.Integer(), nullable=True),
        sa.Column("is_approve", sa.Boolean(), nullable=True),
        sa.Column(
            "target_position",
            sa.Enum(
                "AGENT",
                "ORGANIZATION",
                "MERCHANT",
                "SALES_AGENT",
                name="positionrequesttype",
            ),
            nullable=True,
        ),
        sa.Column(
            "selling_type",
            sa.Enum(
                "CASH",
                "CREDIT",
                "INSTALLMENT",
                "CASH_INSTALLMENT",
                "CREDIT_INSTALLMENT",
                "CASH_CREDIT",
                "CASH_CREDIT_INSTALLMENT",
                name="sellingtype",
            ),
            nullable=True,
        ),
        sa.Column("received_money", sa.String(), nullable=True),
        sa.Column("tracking_code", sa.String(), nullable=True),
        sa.Column("reason", sa.String(), nullable=True),
        sa.Column("geo", sa.String(), nullable=True),
        sa.Column("profit_rate", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("OPEN", "CLOSE", name="positionrequeststatustype"),
            nullable=True,
        ),
        sa.Column("requester_user_id", sa.UUID(), nullable=True),
        sa.Column("creator_id", sa.UUID(), nullable=True),
        sa.Column("next_approve_user_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["creator_id"], ["user.id"]),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["next_approve_user_id"], ["user.id"]),
        sa.ForeignKeyConstraint(["requester_user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_position_request_id"),
        "position_request",
        ["id"],
        unique=True,
    )
    op.create_table(
        "ticket",
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("importance", sa.Integer(), nullable=True),
        sa.Column(
            "type",
            sa.Enum(
                "TECHNICAL",
                "SALES",
                "ORGANIZATION",
                "MERCHANT",
                "AGENT",
                name="tickettype",
            ),
            nullable=False,
        ),
        sa.Column(
            "position",
            sa.Enum("OPEN", "IN_PROGRESS", "CLOSE", name="ticketposition"),
            nullable=True,
        ),
        sa.Column("number", sa.Integer(), nullable=False),
        sa.Column("creator_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["creator_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_ticket_id"), "ticket", ["id"], unique=True)
    op.create_index(op.f("ix_ticket_number"), "ticket", ["number"], unique=True)
    op.create_table(
        "user_message",
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("text", sa.Text(), nullable=True),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_message_id"), "user_message", ["id"], unique=True)
    op.create_index(
        op.f("ix_user_message_title"),
        "user_message",
        ["title"],
        unique=False,
    )
    op.create_table(
        "user_request",
        sa.Column("first_name", sa.String(), nullable=True),
        sa.Column("last_name", sa.String(), nullable=True),
        sa.Column("birth_place", sa.String(), nullable=True),
        sa.Column("postal_code", sa.String(), nullable=True),
        sa.Column("father_name", sa.String(), nullable=True),
        sa.Column("tel", sa.String(), nullable=True),
        sa.Column("address", sa.String(), nullable=True),
        sa.Column("reason", sa.String(), nullable=True),
        sa.Column("status", sa.Boolean(), nullable=True),
        sa.Column("national_card_front_version_id", sa.String(), nullable=True),
        sa.Column("national_card_front_name", sa.String(), nullable=True),
        sa.Column("national_card_back_version_id", sa.String(), nullable=True),
        sa.Column("national_card_back_name", sa.String(), nullable=True),
        sa.Column("birth_certificate_version_id", sa.String(), nullable=True),
        sa.Column("birth_certificate_name", sa.String(), nullable=True),
        sa.Column("video_version_id", sa.String(), nullable=True),
        sa.Column("video_name", sa.String(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("location_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["location_id"], ["location.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_request_id"), "user_request", ["id"], unique=True)
    op.create_table(
        "wallet",
        sa.Column("number", sa.Integer(), nullable=True),
        sa.Column("is_lock", sa.Boolean(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_wallet_id"), "wallet", ["id"], unique=True)
    op.create_index(op.f("ix_wallet_number"), "wallet", ["number"], unique=True)
    op.create_table(
        "card",
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("cvv2", sa.Integer(), nullable=False),
        sa.Column("expiration_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("dynamic_password", sa.String(), nullable=True),
        sa.Column("dynamic_password_exp", sa.DateTime(timezone=True), nullable=True),
        sa.Column("forget_password", sa.String(), nullable=True),
        sa.Column("forget_password_exp", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "type",
            sa.Enum("CREDIT", "SILVER", "GOLD", "BLUE", "PLATINUM", name="cardenum"),
            nullable=False,
        ),
        sa.Column("wallet_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["wallet_id"], ["wallet.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_card_id"), "card", ["id"], unique=True)
    op.create_index(op.f("ix_card_number"), "card", ["number"], unique=True)
    op.create_table(
        "contract",
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("signatory_name", sa.String(), nullable=True),
        sa.Column("signatory_position", sa.String(), nullable=True),
        sa.Column("employees_number", sa.Integer(), nullable=True),
        sa.Column("file_version_id", sa.String(), nullable=True),
        sa.Column("file_name", sa.String(), nullable=True),
        sa.Column("position_request_id", sa.UUID(), nullable=True),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("merchant_id", sa.UUID(), nullable=True),
        sa.Column("agent_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["agent_id"], ["agent.id"]),
        sa.ForeignKeyConstraint(["merchant_id"], ["merchant.id"]),
        sa.ForeignKeyConstraint(["organization_id"], ["organization.id"]),
        sa.ForeignKeyConstraint(["position_request_id"], ["position_request.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_contract_id"), "contract", ["id"], unique=True)
    op.create_index(op.f("ix_contract_number"), "contract", ["number"], unique=True)
    op.create_table(
        "pos",
        sa.Column("number", sa.String(), nullable=True),
        sa.Column("merchant_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["merchant_id"], ["merchant.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_pos_id"), "pos", ["id"], unique=True)
    op.create_index(op.f("ix_pos_number"), "pos", ["number"], unique=True)
    op.create_table(
        "ticket_message",
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("USER", "SUPPORTER", name="ticketmessageposition"),
            nullable=False,
        ),
        sa.Column("user_status", sa.Boolean(), nullable=True),
        sa.Column("supporter_status", sa.Boolean(), nullable=True),
        sa.Column("creator_id", sa.UUID(), nullable=False),
        sa.Column("ticket_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["creator_id"], ["user.id"]),
        sa.ForeignKeyConstraint(["ticket_id"], ["ticket.id"]),
        sa.PrimaryKeyConstraint("creator_id", "id"),
    )
    op.create_index(op.f("ix_ticket_message_id"), "ticket_message", ["id"], unique=True)
    op.create_table(
        "user_crypto",
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("wallet_id", sa.UUID(), nullable=True),
        sa.Column("crypto_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["crypto_id"], ["crypto.id"]),
        sa.ForeignKeyConstraint(["wallet_id"], ["wallet.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_crypto_id"), "user_crypto", ["id"], unique=True)
    op.create_table(
        "transaction",
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column(
            "value_type",
            sa.Enum("CASH", "CREDIT", name="transactionvaluetype"),
            nullable=False,
        ),
        sa.Column("code", sa.Integer(), nullable=True),
        sa.Column(
            "reason",
            sa.Enum(
                "WALLET_CHARGING",
                "PROFIT",
                "PURCHASE",
                "FEE",
                "REGISTER",
                "ORGANIZATION_REGISTER",
                "CONTRACT",
                "CASH_BACK",
                "CARD_TO_CARD",
                name="transactionreasonenum",
            ),
            nullable=True,
        ),
        sa.Column(
            "status",
            sa.Enum("FAILED", "IN_PROGRESS", "ACCEPTED", name="transactionstatusenum"),
            nullable=False,
        ),
        sa.Column("receiver_id", sa.UUID(), nullable=False),
        sa.Column("transferor_id", sa.UUID(), nullable=False),
        sa.Column("intermediary_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["intermediary_id"], ["card.id"]),
        sa.ForeignKeyConstraint(["receiver_id"], ["card.id"]),
        sa.ForeignKeyConstraint(["transferor_id"], ["card.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(op.f("ix_transaction_id"), "transaction", ["id"], unique=True)
    op.create_table(
        "capital_transfer",
        sa.Column("value", sa.BigInteger(), nullable=False),
        sa.Column(
            "transfer_type",
            sa.Enum("Cash", "Credit", name="capitaltransferenum"),
            nullable=True,
        ),
        sa.Column("finish", sa.Boolean(), nullable=True),
        sa.Column("code", sa.Integer(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "IN_PROGRESS",
                "FAILED",
                "ACCEPTED",
                name="capitaltransferstatusenum",
            ),
            nullable=False,
        ),
        sa.Column("file_version_id", sa.String(), nullable=True),
        sa.Column("file_name", sa.String(), nullable=True),
        sa.Column("receiver_id", sa.UUID(), nullable=True),
        sa.Column("transaction_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["receiver_id"], ["wallet.id"]),
        sa.ForeignKeyConstraint(["transaction_id"], ["transaction.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_capital_transfer_code"),
        "capital_transfer",
        ["code"],
        unique=True,
    )
    op.create_index(
        op.f("ix_capital_transfer_id"),
        "capital_transfer",
        ["id"],
        unique=True,
    )
    op.create_table(
        "installments",
        sa.Column("number", sa.String(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column("due_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("merchant_id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("transaction_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["merchant_id"], ["merchant.id"]),
        sa.ForeignKeyConstraint(["parent_id"], ["installments.id"]),
        sa.ForeignKeyConstraint(["transaction_id"], ["transaction.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_installments_id"), "installments", ["id"], unique=True)
    op.create_index(
        op.f("ix_installments_number"),
        "installments",
        ["number"],
        unique=True,
    )
    op.create_table(
        "transaction_row",
        sa.Column("value", sa.Float(), nullable=False),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column(
            "value_type",
            sa.Enum("CASH", "CREDIT", name="transactionvaluetype"),
            nullable=False,
        ),
        sa.Column("code", sa.Integer(), nullable=True),
        sa.Column(
            "reason",
            sa.Enum(
                "WALLET_CHARGING",
                "PROFIT",
                "PURCHASE",
                "FEE",
                "REGISTER",
                "ORGANIZATION_REGISTER",
                "CONTRACT",
                "CASH_BACK",
                "CARD_TO_CARD",
                name="transactionreasonenum",
            ),
            nullable=True,
        ),
        sa.Column("zibal_track_id", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("FAILED", "IN_PROGRESS", "ACCEPTED", name="transactionstatusenum"),
            nullable=False,
        ),
        sa.Column("receiver_id", sa.UUID(), nullable=False),
        sa.Column("transferor_id", sa.UUID(), nullable=False),
        sa.Column("transaction_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["receiver_id"], ["card.id"]),
        sa.ForeignKeyConstraint(["transaction_id"], ["transaction.id"]),
        sa.ForeignKeyConstraint(["transferor_id"], ["card.id"]),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("code"),
    )
    op.create_index(
        op.f("ix_transaction_row_id"),
        "transaction_row",
        ["id"],
        unique=True,
    )
    op.create_table(
        "invoice",
        sa.Column("number", sa.String(), nullable=False),
        sa.Column("icart_number", sa.Integer(), nullable=False),
        sa.Column("value", sa.Integer(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("CASH", "CREDIT", name="invoicetypeenum"),
            nullable=False,
        ),
        sa.Column("parent_id", sa.UUID(), nullable=True),
        sa.Column("installments_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["installments_id"], ["installments.id"]),
        sa.ForeignKeyConstraint(["parent_id"], ["invoice.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_invoice_icart_number"),
        "invoice",
        ["icart_number"],
        unique=True,
    )
    op.create_index(op.f("ix_invoice_id"), "invoice", ["id"], unique=True)
    op.create_table(
        "terminal",
        sa.Column("number", sa.String(), nullable=False),
        sa.Column("redirect_url", sa.String(), nullable=False),
        sa.Column("invoice_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["invoice_id"], ["invoice.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_terminal_id"), "terminal", ["id"], unique=True)
    op.create_index(op.f("ix_terminal_number"), "terminal", ["number"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_terminal_number"), table_name="terminal")
    op.drop_index(op.f("ix_terminal_id"), table_name="terminal")
    op.drop_table("terminal")
    op.drop_index(op.f("ix_invoice_id"), table_name="invoice")
    op.drop_index(op.f("ix_invoice_icart_number"), table_name="invoice")
    op.drop_table("invoice")
    op.drop_index(op.f("ix_transaction_row_id"), table_name="transaction_row")
    op.drop_table("transaction_row")
    op.drop_index(op.f("ix_installments_number"), table_name="installments")
    op.drop_index(op.f("ix_installments_id"), table_name="installments")
    op.drop_table("installments")
    op.drop_index(op.f("ix_capital_transfer_id"), table_name="capital_transfer")
    op.drop_index(op.f("ix_capital_transfer_code"), table_name="capital_transfer")
    op.drop_table("capital_transfer")
    op.drop_index(op.f("ix_transaction_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_user_crypto_id"), table_name="user_crypto")
    op.drop_table("user_crypto")
    op.drop_index(op.f("ix_ticket_message_id"), table_name="ticket_message")
    op.drop_table("ticket_message")
    op.drop_index(op.f("ix_pos_number"), table_name="pos")
    op.drop_index(op.f("ix_pos_id"), table_name="pos")
    op.drop_table("pos")
    op.drop_index(op.f("ix_contract_number"), table_name="contract")
    op.drop_index(op.f("ix_contract_id"), table_name="contract")
    op.drop_table("contract")
    op.drop_index(op.f("ix_card_number"), table_name="card")
    op.drop_index(op.f("ix_card_id"), table_name="card")
    op.drop_table("card")
    op.drop_index(op.f("ix_wallet_number"), table_name="wallet")
    op.drop_index(op.f("ix_wallet_id"), table_name="wallet")
    op.drop_table("wallet")
    op.drop_index(op.f("ix_user_request_id"), table_name="user_request")
    op.drop_table("user_request")
    op.drop_index(op.f("ix_user_message_title"), table_name="user_message")
    op.drop_index(op.f("ix_user_message_id"), table_name="user_message")
    op.drop_table("user_message")
    op.drop_index(op.f("ix_ticket_number"), table_name="ticket")
    op.drop_index(op.f("ix_ticket_id"), table_name="ticket")
    op.drop_table("ticket")
    op.drop_index(op.f("ix_position_request_id"), table_name="position_request")
    op.drop_table("position_request")
    op.drop_index(op.f("ix_merchant_number"), table_name="merchant")
    op.drop_index(op.f("ix_merchant_id"), table_name="merchant")
    op.drop_table("merchant")
    op.drop_index(op.f("ix_log_id"), table_name="log")
    op.drop_table("log")
    op.drop_index(op.f("ix_user_username"), table_name="user")
    op.drop_index(op.f("ix_user_national_code"), table_name="user")
    op.drop_index(op.f("ix_user_last_name"), table_name="user")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_index(op.f("ix_user_first_name"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_role_permission_id"), table_name="role_permission")
    op.drop_table("role_permission")
    op.drop_index(op.f("ix_organization_id"), table_name="organization")
    op.drop_table("organization")
    op.drop_index(op.f("ix_cooperation_request_id"), table_name="cooperation_request")
    op.drop_table("cooperation_request")
    op.drop_index(op.f("ix_agent_location_id"), table_name="agent_location")
    op.drop_table("agent_location")
    op.drop_index(op.f("ix_agent_ability_id"), table_name="agent_ability")
    op.drop_table("agent_ability")
    op.drop_index(op.f("ix_verify_phone_verify_code"), table_name="verify_phone")
    op.drop_index(op.f("ix_verify_phone_phone_number"), table_name="verify_phone")
    op.drop_index(op.f("ix_verify_phone_id"), table_name="verify_phone")
    op.drop_table("verify_phone")
    op.drop_index(op.f("ix_role_name"), table_name="role")
    op.drop_index(op.f("ix_role_id"), table_name="role")
    op.drop_table("role")
    op.drop_index(op.f("ix_permission_name"), table_name="permission")
    op.drop_index(op.f("ix_permission_id"), table_name="permission")
    op.drop_table("permission")
    op.drop_index(op.f("ix_news_title"), table_name="news")
    op.drop_index(op.f("ix_news_id"), table_name="news")
    op.drop_table("news")
    op.drop_index(op.f("ix_location_name"), table_name="location")
    op.drop_index(op.f("ix_location_id"), table_name="location")
    op.drop_table("location")
    op.drop_index(op.f("ix_important_data_id"), table_name="important_data")
    op.drop_table("important_data")
    op.drop_index(op.f("ix_fee_id"), table_name="fee")
    op.drop_table("fee")
    op.drop_index(op.f("ix_crypto_name"), table_name="crypto")
    op.drop_index(op.f("ix_crypto_id"), table_name="crypto")
    op.drop_table("crypto")
    op.drop_index(op.f("ix_credit_id"), table_name="credit")
    op.drop_table("credit")
    op.drop_index(op.f("ix_cash_id"), table_name="cash")
    op.drop_table("cash")
    op.drop_index(op.f("ix_agent_id"), table_name="agent")
    op.drop_table("agent")
    op.drop_index(op.f("ix_ability_name"), table_name="ability")
    op.drop_index(op.f("ix_ability_id"), table_name="ability")
    op.drop_table("ability")
    # ### end Alembic commands ###
